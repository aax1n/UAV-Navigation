<launch>
  <!-- size of map, change the size inflate x, y, z according to your application -->
  <arg name="map_size_x" value="100"/>
  <arg name="map_size_y" value="100"/>
  <arg name="map_size_z" value=" 5"/>

  <!-- topic of your odometry such as VIO or LIO -->
  <arg name="odom_topic" value="/vision_odom" />
<!--  <node pkg="tf" type="static_transform_publisher" name="world" args="0 0 0.15 0 0 0 /world map 70" />-->
  <node pkg="tf" type="static_transform_publisher" name="ground_plane" args="0 0 0 0 0 0 ground_plane odom 20" />
  <node pkg="tf" type="static_transform_publisher" name="iris_0_map_to_world"
        args="0.0 0.0 0 0.0 0.0 0.0 map world 20" />
  <node pkg="tf" type="static_transform_publisher" name="iris_0_world_to_ground_plane"
        args="0.0 0.0 0 0.0 0.0 0.0 world ground_plane 20" />
  <!-- main algorithm params -->
  <include file="$(find ego_planner)/launch/advanced_param.xml">

    <arg name="map_size_x_" value="$(arg map_size_x)"/>
    <arg name="map_size_y_" value="$(arg map_size_y)"/>
    <arg name="map_size_z_" value="$(arg map_size_z)"/>
    <arg name="odometry_topic" value="$(arg odom_topic)"/>

    <!-- camera pose: transform of camera frame in the world frame -->
    <!-- depth topic: depth image, 640x480 by default -->
    <!-- don't set cloud_topic if you already set these ones! -->
    <arg name="camera_pose_topic" value="/iris_0/mavros/vision_pose/pose"/>
    <arg name="depth_topic" value="/iris_0/realsense/depth_camera/depth/image_raw"/>

    <!-- topic of point cloud measurement, such as from LIDAR  -->
    <!-- don't set camera pose and depth, if you already set this one! -->
    <arg name="cloud_topic" value="/FRP_SLAM/tracked_points00"/>

    <!-- intrinsic params of the depth camera -->
    <arg name="cx" value="320.5"/>
    <arg name="cy" value="240.5"/>
    <arg name="fx" value="554.254691191187"/>
    <arg name="fy" value="554.254691191187"/>

    <!-- maximum velocity and acceleration the drone will reach -->
    <arg name="max_vel" value="1.0" />
    <arg name="max_acc" value="0.5" />

    <!--always set to 1.5 times grater than sensing horizen-->
    <arg name="planning_horizon" value="7.5" /> 

    <!-- 1: use 2D Nav Goal to select goal  -->
    <!-- 2: use global waypoints below  -->
    <arg name="flight_type" value="2" />
    
    <!-- global waypoints -->
    <!-- It generates a piecewise min-snap traj passing all waypoints -->
    <arg name="point_num" value="5" />

    <arg name="point0_x" value="3.0" />
    <arg name="point0_y" value="0.0" />
    <arg name="point0_z" value="1.2" />

    <arg name="point1_x" value="3.5" />
    <arg name="point1_y" value="17" />
    <arg name="point1_z" value="1.2" />

    <arg name="point2_x" value="-6.9" />
    <arg name="point2_y" value="17.8" />
    <arg name="point2_z" value="1.2" />

    <arg name="point3_x" value="-7.9" />
    <arg name="point3_y" value="1.9" />
    <arg name="point3_z" value="1.2" />

    <arg name="point4_x" value="0" />
    <arg name="point4_y" value="0" />
    <arg name="point4_z" value="0" />
    
  </include>

  <!-- trajectory server -->
  <node pkg="ego_planner" name="traj_server" type="traj_server" output="screen">
<!--    <remap from="/position_cmd" to="planning/pos_cmd"/>-->
    <remap from="position_cmd" to="/xtdrone/iris_0/planning/pos_cmd"/>
    <remap from="pose_cmd" to="/xtdrone/iris_0/cmd_pose_enu"/>
    <remap from="~planning/bspline" to="/xtdrone/iris_0/planning/bspline"/>

    <remap from="/odom_world" to="$(arg odom_topic)"/>
    <param name="traj_server/time_forward" value="1.0" type="double"/>
  </node>

<!--  <node pkg="waypoint_generator" name="waypoint_generator" type="waypoint_generator" output="screen">-->
<!--    <remap from="~odom" to="$(arg odom_topic)"/>-->
<!--    <remap from="~goal" to="/move_base_simple/goal"/>-->
<!--    <remap from="~traj_start_trigger" to="/traj_start_trigger" />-->
<!--    <remap from="/waypoint_generator/waypoints" to="/RGBD/Path"/>-->
<!--    <param name="waypoint_type" value="manual-lonely-waypoint"/>-->
<!--  </node>-->


  <include file="$(find ego_planner)/launch/rviz.launch"/>

</launch>
